{"version":3,"sources":["hooks/useForm.js","hooks/useDebounce.js","hooks/useTimeout.js","actions/index.js","components/SearchSection.js","components/Detail.js","components/Flag.js","components/CountryCard.js","components/CountryList.js","components/MainPage.js","components/Header.js","components/BorderList.js","components/DetailedCountryCard.js","App.js","reducers/index.js","index.js"],"names":["useForm","initialState","useState","form","setForm","e","target","name","value","checked","newValue","type","useDebounce","callback","delay","dependencies","callbackRef","useRef","timeoutRef","useEffect","current","set","useCallback","setTimeout","clear","clearTimeout","reset","useTimeout","SWAP_THEME","SEARCH","GET_DATA","SET_ERROR","initialForm","region","connect","search","values","payload","props","dark","handleChange","country","className","onChange","placeholder","htmlFor","list","id","Detail","detail","replace","Flag","flag","src","alt","CountryCard","to","map","d","uuid","state","countries","shownCountries","index","MainPage","swapTheme","onClick","BorderList","borders","length","newBorders","b","find","c","alpha3Code","border","defaultCountry","allCountries","countryName","useParams","setCountry","goBack","useHistory","getData","dispatch","axios","get","then","res","data","Population","population","toLocaleString","Native_Name","nativeName","Sub_Region","subregion","Region","Capital","capital","Top_Level_Domain","topLevelDomain","Currency","currencies","Languages","languages","l","join","catch","err","path","reducer","action","filter","Object","keys","reduce","searchedFor","term","countryProperty","toLowerCase","searchedProperty","includes","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d8c610f.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nconst useForm = initialState => {\n    const [form, setForm] = useState(initialState)\n\n    const handleChange = e => {\n        const { name, value, checked, type } = e.target\n        const newValue = type === \"checkbox\" ? checked : value\n        setForm({\n            ...form,\n            [name]: newValue\n        })\n    }\n    \n    return [form, handleChange]\n}\n\nexport default useForm","import { useEffect } from \"react\"\nimport useTimeout from \"./useTimeout\"\n\nexport default function useDebounce(callback, delay, dependencies) {\n  const { reset, clear } = useTimeout(callback, delay)\n  useEffect(reset, [...dependencies, reset])\n  useEffect(clear, [])\n}","import { useCallback, useEffect, useRef } from \"react\"\n\nexport default function useTimeout(callback, delay) {\n  const callbackRef = useRef(callback)\n  const timeoutRef = useRef()\n\n  useEffect(() => {\n    callbackRef.current = callback\n  }, [callback])\n\n  const set = useCallback(() => {\n    timeoutRef.current = setTimeout(() => callbackRef.current(), delay)\n  }, [delay])\n\n  const clear = useCallback(() => {\n    timeoutRef.current && clearTimeout(timeoutRef.current)\n  }, [])\n\n  useEffect(() => {\n    set()\n    return clear\n  }, [delay, set, clear])\n\n  const reset = useCallback(() => {\n    clear()\n    set()\n  }, [clear, set])\n\n  return { reset, clear }\n}\n","import axios from \"axios\"\n\n\nexport const SWAP_THEME = \"SWAP_THEME\"\nexport const swapTheme = () => ({\n    type: SWAP_THEME,  \n})\n\nexport const SEARCH = \"SEARCH\"\nexport const search = values => ({\n    type: SEARCH, \n    payload: values\n})\n\nexport const GET_DATA = \"GET_DATA\"\nexport const SET_ERROR = \"SET_ERROR\"\nexport const getData = () => dispatch => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\")\n        .then(res => \n            dispatch({ \n                type: GET_DATA, \n                payload: res.data.map(c => ({\n                    ...c,\n                    Population: c.population.toLocaleString(\"en-US\"),\n                    Native_Name: c.nativeName,\n                    Sub_Region: c.subregion,\n                    Region: c.region,\n                    Capital: c.capital,\n                    Top_Level_Domain: c.topLevelDomain[0],\n                    Currency: c.currencies[0].name,\n                    Languages: c.languages.map(l => \n                        l.name\n                    ).join(\", \")\n                })) \n            })\n        ).catch(err => \n            dispatch({ \n                type: SET_ERROR, \n                payload: err \n            })    \n        )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport useForm from '../hooks/useForm'\nimport useDebounce from '../hooks/useDebounce'\nimport { search } from \"../actions\"\n\nconst initialForm = {\n    name: \"\",\n    region: \"\",\n}\n\nfunction SearchSection(props) {\n    const { dark, search } = props\n    const [form, handleChange] = useForm(initialForm)\n    const { country, region } = form\n\n    useDebounce(() => \n        search(form)\n    , 1000, [form])\n\n    return (\n        <section className=\"search-section\">\n            <input\n                data-dark={dark}\n                onChange={handleChange}\n                value={country}\n                className=\"search-bar\" \n                type=\"text\"\n                name=\"name\" \n                placeholder=\"Search for a country\" \n            />\n            <label \n                htmlFor=\"region\">\n                Filter by Region\n                <input\n                    data-dark={dark} \n                    onChange={handleChange}\n                    value={region}\n                    list=\"region-list\" \n                    name=\"region\" \n                    id=\"region\" \n                />\n            </label>\n            <datalist id=\"region-list\">\n                <option value=\"Africa\"/>\n                <option value=\"America\"/>\n                <option value=\"Asia\"/>\n                <option value=\"Europe\"/>\n                <option value=\"Oceania\"/>\n            </datalist>\n        </section>\n    )\n}\n\nexport default connect(null, { search })(SearchSection)","import React from 'react'\n\nexport default function Detail(props) {\n    const { detail, value } = props\n    return (\n        <h3>\n            <span className=\"country-label\">{detail.replace(\"_\", \" \")}: </span> \n            {value}\n        </h3>\n    )\n}\n","import React from 'react'\n\nexport default function Flag(props) {\n    const { flag, name } = props\n    return (\n        <div className=\"flag-container\">\n            <img \n                src={flag} \n                alt={`${name}-flag`}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport Detail from \"./Detail\"\nimport Flag from './Flag'\nimport { v4 as uuid } from \"uuid\"\n\nexport default function CountryCard(props) {\n    const { dark, country } = props\n    const { \n        name, \n        flag, \n    } = country\n    const details = [\"Population\", \"Region\", \"Capital\"]\n    return (\n        <Link to={`/countries/${name}`} >\n            <div className=\"country-card\">\n                <Flag \n                    flag={flag} \n                    name={name}\n                />\n                <div\n                    data-dark={dark}\n                    className=\"text-container\">\n                    <h2 className=\"country-name\">\n                        {name}\n                    </h2>\n                    {\n                        details.map(d => \n                            <Detail \n                                detail={d} \n                                value={country[d]}\n                                key={uuid()}\n                            />\n                        )\n                    }\n                </div>\n            </div>\n        </Link>\n    )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport CountryCard from \"./CountryCard\"\n\nfunction CountryList(props) {\n    const { dark, countries } = props\n    return (\n        <section className=\"country-list\">\n            {countries.map((country, index) => \n                <CountryCard \n                    dark={dark} \n                    country={country} \n                    key={index} \n                />\n            )}\n        </section>\n    )\n}\n\nconst mapStateToProps = state => ({\n    countries: state.shownCountries\n})\n\nexport default connect(mapStateToProps)(CountryList)","import React from 'react';\nimport SearchSection from \"./SearchSection\";\nimport CountryList from \"./CountryList\";\n\nfunction MainPage(props) {\n    const { dark } = props\n    return (\n        <main data-dark={dark}>\n            <SearchSection dark={dark}/>\n            <CountryList dark={dark}/>\n        </main>\n    )\n}\n\n\n\nexport default MainPage","import React from 'react'\nimport { connect } from 'react-redux'\nimport { swapTheme } from \"../actions\"\n\nfunction Header(props) {\n    const { dark, swapTheme } = props\n    return (\n        <header data-dark={dark}>\n            <h1>Where in the world?</h1>\n            <button \n                data-dark={dark}\n                onClick={swapTheme}\n            >{dark ? \"Light\" : \"Dark\"} Mode</button>\n        </header>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dark: state.dark,\n})\n\nexport default connect(mapStateToProps, { swapTheme })(Header)","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { v4 as uuid } from \"uuid\"\n\nexport default function BorderList(props) {\n    const { borders, dark, countries } = props\n    if (borders.length === 0) return null\n    const newBorders = borders.map(b => \n        countries.find(c => \n            c.alpha3Code === b    \n        ).name\n    )\n    return (\n        <h3 className=\"country-borders\">\n            <span className=\"country-label\">Border Countries: </span>\n            {\n                newBorders.map(border =>\n                    <Link \n                        key={uuid()}\n                        to={`/countries/${border}`}\n                        data-dark={dark}\n                        className=\"country-link\"\n                    >{ border }</Link>\n                )\n            }\n        </h3>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport BorderList from './BorderList'\nimport Detail from './Detail'\nimport Flag from \"./Flag\"\nimport { v4 as uuid } from \"uuid\"\n\nconst defaultCountry = {\n    name: \"\",\n    flag: \"\",\n    borders: []\n}\n\nfunction DetailedCountryCard(props) {\n    const { dark, countries } = props\n    const { countryName } = useParams()\n    const [country, setCountry] = useState(defaultCountry)\n    const { goBack } = useHistory()\n\n    useEffect(() => {\n        setCountry(countries.find(c => \n            c.name === countryName\n        ))\n    }, [countryName, countries])\n    \n    const { \n        name, \n        flag, \n        borders\n    } = country\n\n    const details = [\n        \"Population\", \"Region\", \"Capital\", \n        \"Native_Name\", \"Sub_Region\", \"Top_Level_Domain\",\n        \"Currency\", \"Languages\"\n    ]\n\n    return (\n        <main \n        data-dark={dark}\n        className=\"detailed-page\">\n            <button \n                className=\"back-link\"\n                data-dark={dark}\n                onClick={goBack}\n            >Back</button>\n            <div className=\"detailed-country-card\">\n                <Flag \n                    flag={flag}\n                    name={name}\n                />\n                <div \n                    data-dark={dark}\n                    className=\"text-container\">\n                    <h2 className=\"country-name\">\n                        {name}\n                    </h2>\n                    <div className=\"details-container\">\n                        {\n                            details.map(d => \n                                <Detail \n                                    detail={d} \n                                    value={country[d]}\n                                    key={uuid()}\n                                />\n                            )\n                        }\n                        <BorderList \n                            borders={borders} \n                            dark={dark} \n                            countries={countries}\n                        />\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nconst mapStateToProps = state => ({\n    countries: state.allCountries\n})\n\nexport default connect(mapStateToProps)(DetailedCountryCard)","import { useEffect } from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport MainPage from \"./components/MainPage\"\nimport Header from \"./components/Header\"\nimport DetailedCountryCard from \"./components/DetailedCountryCard\"\nimport \"./style/style.css\"\nimport { connect } from \"react-redux\" \nimport { getData } from \"./actions\"\n\nfunction App(props) {\n  const { getData, dark } = props\n\n  useEffect(getData, [])\n\n  return (\n    <div \n      data-dark={dark}\n      className=\"App\">\n      <Header/>\n      <Router>\n        <Switch>\n          <Route path=\"/countries/:countryName\">\n            <DetailedCountryCard dark={dark}/>\n          </Route>\n          <Route path=\"/countries/\">\n            <MainPage dark={dark}/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  dark: state.dark\n})\n\nexport default connect(mapStateToProps, { getData })(App);\n","import { GET_DATA, SEARCH, SET_ERROR, SWAP_THEME } from \"../actions\"\n\nconst initialState = {\n    allCountries: [],\n    shownCountries: [],\n    err: \"\",\n    dark: true\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SEARCH:\n            return {\n                ...state,\n                shownCountries: state.allCountries.filter(country => {\n                    const { payload: search } = action\n                    const searchedFor = Object.keys(search).reduce((searchedFor, term) => {\n                        if (search[term] === \"\") return searchedFor\n                        const countryProperty = country[term].toLowerCase()\n                        const searchedProperty = search[term].toLowerCase()\n                        if (!countryProperty.includes(searchedProperty)) return false\n                        return searchedFor\n                    }, true)\n                    return searchedFor\n                })\n            }\n        case SWAP_THEME:\n            return {\n                ...state,\n                dark: !state.dark\n            }\n        case GET_DATA:\n            return {\n                ...state,\n                allCountries: action.payload,\n                shownCountries: action.payload,\n            }\n        case SET_ERROR:\n            return {\n                ...state,\n                err: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport logger from \"redux-logger\"\nimport reducer from \"./reducers\"\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}