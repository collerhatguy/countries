{"version":3,"sources":["hooks/useForm.js","hooks/useDebounce.js","hooks/useTimeout.js","actions/index.js","components/SearchSection.js","components/CountryCard.js","components/CountryList.js","components/MainPage.js","components/Header.js","components/BorderList.js","components/DetailedCountryCard.js","App.js","reducers/index.js","index.js"],"names":["useForm","initialState","useState","form","setForm","e","target","name","value","checked","newValue","type","useDebounce","callback","delay","dependencies","callbackRef","useRef","timeoutRef","useEffect","current","set","useCallback","setTimeout","clear","clearTimeout","reset","useTimeout","SWAP_THEME","SEARCH","GET_DATA","SET_ERROR","initialForm","region","connect","search","values","payload","props","dark","handleChange","country","className","onChange","placeholder","htmlFor","list","id","CountryCard","flag","population","capital","to","src","alt","toLocaleString","state","countries","shownCountries","map","index","MainPage","swapTheme","onClick","BorderList","borders","length","border","borderCountry","find","alpha3Code","defaultCountry","nativeName","subregion","topLevelDomain","currencies","languages","allCountries","countryName","useParams","setCountry","goBack","useHistory","c","currencyName","language","join","getData","dispatch","axios","get","then","data","catch","err","path","reducer","action","filter","Object","keys","reduce","searchedFor","term","countryProperty","toLowerCase","searchedProperty","includes","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3a2d2a3.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nconst useForm = initialState => {\n    const [form, setForm] = useState(initialState)\n\n    const handleChange = e => {\n        const { name, value, checked, type } = e.target\n        const newValue = type === \"checkbox\" ? checked : value\n        setForm({\n            ...form,\n            [name]: newValue\n        })\n    }\n    \n    return [form, handleChange]\n}\n\nexport default useForm","import { useEffect } from \"react\"\nimport useTimeout from \"./useTimeout\"\n\nexport default function useDebounce(callback, delay, dependencies) {\n  const { reset, clear } = useTimeout(callback, delay)\n  useEffect(reset, [...dependencies, reset])\n  useEffect(clear, [])\n}","import { useCallback, useEffect, useRef } from \"react\"\n\nexport default function useTimeout(callback, delay) {\n  const callbackRef = useRef(callback)\n  const timeoutRef = useRef()\n\n  useEffect(() => {\n    callbackRef.current = callback\n  }, [callback])\n\n  const set = useCallback(() => {\n    timeoutRef.current = setTimeout(() => callbackRef.current(), delay)\n  }, [delay])\n\n  const clear = useCallback(() => {\n    timeoutRef.current && clearTimeout(timeoutRef.current)\n  }, [])\n\n  useEffect(() => {\n    set()\n    return clear\n  }, [delay, set, clear])\n\n  const reset = useCallback(() => {\n    clear()\n    set()\n  }, [clear, set])\n\n  return { reset, clear }\n}\n","import axios from \"axios\"\n\n\nexport const SWAP_THEME = \"SWAP_THEME\"\nexport const swapTheme = () => ({\n    type: SWAP_THEME,  \n})\n\nexport const SEARCH = \"SEARCH\"\nexport const search = values => ({\n    type: SEARCH, \n    payload: values\n})\n\nexport const GET_DATA = \"GET_DATA\"\nexport const SET_ERROR = \"SET_ERROR\"\nexport const getData = () => dispatch => {\n    axios.get(\"https://restcountries.eu/rest/v2/all\")\n        .then(countries => \n            dispatch({ \n                type: GET_DATA, \n                payload: countries.data \n            })\n        ).catch(err => \n            dispatch({ \n                type: SET_ERROR, \n                payload: err \n            })    \n        )\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport useForm from '../hooks/useForm'\nimport useDebounce from '../hooks/useDebounce'\nimport { search } from \"../actions\"\n\nconst initialForm = {\n    name: \"\",\n    region: \"\",\n}\n\nfunction SearchSection(props) {\n    const { dark, search } = props\n    const [form, handleChange] = useForm(initialForm)\n    const { country, region } = form\n\n    useDebounce(() => \n        search(form)\n    , 1000, [form])\n\n    return (\n        <section className=\"search-section\">\n            <input\n                data-dark={dark}\n                onChange={handleChange}\n                value={country}\n                className=\"search-bar\" \n                type=\"text\"\n                name=\"name\" \n                placeholder=\"Search for a country\" \n            />\n            <label \n                htmlFor=\"region\">\n                Filter by Region\n                <input\n                    data-dark={dark} \n                    onChange={handleChange}\n                    value={region}\n                    list=\"region-list\" \n                    name=\"region\" \n                    id=\"region\" \n                />\n            </label>\n            <datalist id=\"region-list\">\n                <option value=\"Africa\"/>\n                <option value=\"America\"/>\n                <option value=\"Asia\"/>\n                <option value=\"Europe\"/>\n                <option value=\"Oceania\"/>\n            </datalist>\n        </section>\n    )\n}\n\nexport default connect(null, { search })(SearchSection)","import React from 'react';\nimport {Link } from \"react-router-dom\";\n\nexport default function CountryCard(props) {\n    const { dark, country } = props\n    const { name, flag, population, region, capital } = country\n    return (\n        <Link to={`/countries/${name}`} >\n            <div className=\"country-card\">\n                <div className=\"flag-container\">\n                    <img src={flag} alt={`${name}-flag`}/>\n                </div>\n                <div\n                    data-dark={dark}\n                    className=\"text-container\">\n                    <h2 className=\"country-name\">\n                        {name}\n                    </h2>\n                    <h3>\n                        <span className=\"country-label\">Population: </span> \n                        {population.toLocaleString(\"en-US\")}\n                    </h3>\n                    <h3>\n                        <span className=\"country-label\">Region: </span>\n                        {region}\n                    </h3>\n                    <h3>\n                        <span className=\"country-label\">Capital: </span>\n                        {capital}\n                    </h3>\n                </div>\n            </div>\n        </Link>\n    )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport CountryCard from \"./CountryCard\"\n\nfunction CountryList(props) {\n    const { dark, countries } = props\n    return (\n        <section className=\"country-list\">\n            {countries.map((country, index) => \n                <CountryCard \n                    dark={dark} \n                    country={country} \n                    key={index} \n                />\n            )}\n        </section>\n    )\n}\n\nconst mapStateToProps = state => ({\n    countries: state.shownCountries\n})\n\nexport default connect(mapStateToProps)(CountryList)","import React from 'react';\nimport SearchSection from \"./SearchSection\";\nimport CountryList from \"./CountryList\";\n\nfunction MainPage(props) {\n    const { dark } = props\n    return (\n        <main data-dark={dark}>\n            <SearchSection dark={dark}/>\n            <CountryList dark={dark}/>\n        </main>\n    )\n}\n\n\n\nexport default MainPage","import React from 'react'\nimport { connect } from 'react-redux'\nimport { swapTheme } from \"../actions\"\n\nfunction Header(props) {\n    const { dark, swapTheme } = props\n    return (\n        <header data-dark={dark}>\n            <h1>Where in the world?</h1>\n            <button \n                data-dark={dark}\n                onClick={swapTheme}\n            >{dark ? \"Light\" : \"Dark\"} Mode</button>\n        </header>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dark: state.dark,\n})\n\nexport default connect(mapStateToProps, { swapTheme })(Header)","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nexport default function BorderList(props) {\n    const { borders, dark, countries } = props\n    if (borders.length === 0) return null\n    return (\n        <h3 className=\"country-borders\">\n            <span className=\"country-label\">Border Countries: </span>\n            {borders.map(border => {\n                const borderCountry = countries.find(country => \n                    country.alpha3Code === border\n                )\n                return <Link \n                    to={`/countries/${borderCountry.name}`}\n                    data-dark={dark}\n                    className=\"country-link\"\n                >{`${borderCountry.name}`}</Link>\n            })}\n        </h3>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport BorderList from './BorderList'\n\nconst defaultCountry = {\n    name: \"\",\n    flag: \"\",\n    nativeName: \"\",\n    population: \"\",\n    region: \"\", \n    subregion: \"\", \n    capital: \"\", \n    topLevelDomain: [], \n    currencies: [{ name: \"\" }], \n    languages: [],\n    borders: []\n}\n\nfunction DetailedCountryCard(props) {\n    const { dark, countries } = props\n    const { countryName } = useParams()\n    const [country, setCountry] = useState(defaultCountry)\n    const { goBack } = useHistory()\n\n    useEffect(() => {\n        setCountry(countries.find(c => \n            c.name === countryName\n        ))\n    }, [countryName, countries])\n    \n    const { \n        name, \n        flag, \n        nativeName, \n        population, \n        region, \n        subregion, \n        capital, \n        topLevelDomain: [topLevelDomain], \n        currencies: [{ name: currencyName}], \n        languages,\n        borders\n    } = country\n\n    return (\n        <main \n        data-dark={dark}\n        className=\"detailed-page\">\n            <button \n                className=\"back-link\"\n                data-dark={dark}\n                onClick={goBack}\n            >Back</button>\n            <div className=\"detailed-country-card\">\n                <div className=\"flag-container\">\n                    <img src={flag} alt={`${name}-flag`} />\n                </div>\n                <div \n                    data-dark={dark}\n                    className=\"text-container\">\n                    <h2 className=\"country-name\">\n                        {name}\n                    </h2>\n                    <div className=\"details-container\">\n                        <h3>\n                            <span className=\"country-label\">Native Name: </span> \n                            {nativeName}\n                        </h3>\n                        <h3>\n                            <span className=\"country-label\">Population: </span> \n                            {population.toLocaleString(\"en-US\")}\n                        </h3>\n                        <h3>\n                            <span className=\"country-label\">Region: </span>\n                            {region}\n                        </h3>\n                        <h3>\n                            <span className=\"country-label\">Sub Region: </span>\n                            {subregion}\n                        </h3>\n                        <h3>\n                            <span className=\"country-label\">Capital: </span>\n                            {capital}\n                        </h3>\n                        <h3>\n                            <span className=\"country-label\">Top Level Domain: </span>\n                            {topLevelDomain}\n                        </h3>\n                        <h3>\n                            <span className=\"country-label\">Currency: </span>\n                            {currencyName}\n                        </h3>\n                        <h3 className=\"country-languages\">\n                            <span className=\"country-label\">Languages: </span>\n                            {\n                                languages.map(language => \n                                    language.name\n                                ).join(\", \")\n                            }\n                        </h3>\n                        <BorderList \n                            borders={borders} \n                            dark={dark} \n                            countries={countries}\n                        />\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nconst mapStateToProps = state => ({\n    countries: state.allCountries\n})\n\nexport default connect(mapStateToProps)(DetailedCountryCard)","import { useEffect } from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport MainPage from \"./components/MainPage\"\nimport Header from \"./components/Header\"\nimport DetailedCountryCard from \"./components/DetailedCountryCard\"\nimport \"./style/style.css\"\nimport { connect } from \"react-redux\" \nimport { getData } from \"./actions\"\n\nfunction App(props) {\n  const { getData, dark } = props\n\n  useEffect(getData, [])\n\n  return (\n    <div \n      data-dark={dark}\n      className=\"App\">\n      <Header/>\n      <Router>\n        <Switch>\n          <Route path=\"/countries/:countryName\">\n            <DetailedCountryCard dark={dark}/>\n          </Route>\n          <Route path=\"/countries/\">\n            <MainPage dark={dark}/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  dark: state.dark\n})\n\nexport default connect(mapStateToProps, { getData })(App);\n","import { GET_DATA, SEARCH, SET_ERROR, SWAP_THEME } from \"../actions\"\n\nconst initialState = {\n    allCountries: [],\n    shownCountries: [],\n    err: \"\",\n    dark: true\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SEARCH:\n            return {\n                ...state,\n                shownCountries: state.allCountries.filter(country => {\n                    const { payload: search } = action\n                    const searchedFor = Object.keys(search).reduce((searchedFor, term) => {\n                        if (search[term] === \"\") return searchedFor\n                        const countryProperty = country[term].toLowerCase()\n                        const searchedProperty = search[term].toLowerCase()\n                        if (!countryProperty.includes(searchedProperty)) return false\n                        return searchedFor\n                    }, true)\n                    return searchedFor\n                })\n            }\n        case SWAP_THEME:\n            return {\n                ...state,\n                dark: !state.dark\n            }\n        case GET_DATA:\n            return {\n                ...state,\n                allCountries: action.payload,\n                shownCountries: action.payload,\n            }\n        case SET_ERROR:\n            return {\n                ...state,\n                err: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport logger from \"redux-logger\"\nimport reducer from \"./reducers\"\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}